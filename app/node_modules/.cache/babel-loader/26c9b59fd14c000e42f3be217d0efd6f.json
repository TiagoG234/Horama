{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiago\\\\Desktop\\\\CenasJS\\\\cenas\\\\src\\\\components\\\\MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams, Navigate } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Home from \"./Home\";\nimport { Image } from \"react-bootstrap\";\nimport NavigBar from \"./NavigBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const hasFetched = useRef(false);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const response = useRef(false);\n  const listedKeys = [\"Title\", \"Year\", \"Rated\", \"Released\", \"Runtime\", \"Genre\", \"Director\", \"Writer\", \"Actors\", \"Awards\", \"Box Office\", \"Production\"];\n  useEffect(() => {\n    if (!hasFetched.current) {\n      fetch(`http://omdbapi.com/?apikey=470179fa&i=${id}`).then(response => response.json()).then(data => {\n        setMovies(data);\n\n        if (data.Response === \"True\") {\n          setMovies(data.Search);\n          response.current = true;\n          setIsLoading(true);\n        } else {\n          response.current = false;\n          setIsLoading(true);\n        }\n      });\n      hasFetched.current = true;\n      setIsLoading(false);\n    }\n  }, [id, setMovies]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-10 mx-auto mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-left\",\n        children: isLoading ? response === \"True\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-left px-5\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: movies.Poster,\n              width: 300,\n              height: 450,\n              className: \"img-no-hover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-flex justify-content-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex col-md-10 pl-5 ml-5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: movies.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex col-md-10 pl-5 ml-5\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movies.Plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex col-md-10 pl-5 ml-5 justify-content-left\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group justify-content-left\",\n                children: Object.keys(movies).filter(value => {\n                  return listedKeys.includes(value);\n                }).map((key, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-group-item border-0 p-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        children: `${key}:`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 33\n                      }, this), ` ${movies[key]}`]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 31\n                    }, this)\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieDetail, \"iZQSORX4z/xw6uU+HGrPhzbO+S8=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["C:/Users/Tiago/Desktop/CenasJS/cenas/src/components/MovieDetail.js"],"names":["React","useParams","Navigate","useRef","useState","useEffect","Home","Image","NavigBar","MovieDetail","id","hasFetched","movies","setMovies","isLoading","setIsLoading","response","listedKeys","current","fetch","then","json","data","Response","Search","Poster","Title","Plot","Object","keys","filter","value","includes","map","key","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useParams, Navigate } from \"react-router-dom\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport Home from \"./Home\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport NavigBar from \"./NavigBar\";\r\n\r\nconst MovieDetail = () => {\r\n  const { id } = useParams();\r\n  const hasFetched = useRef(false);\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const response = useRef(false);\r\n  const listedKeys = [\r\n    \"Title\",\r\n    \"Year\",\r\n    \"Rated\",\r\n    \"Released\",\r\n    \"Runtime\",\r\n    \"Genre\",\r\n    \"Director\",\r\n    \"Writer\",\r\n    \"Actors\",\r\n    \"Awards\",\r\n    \"Box Office\",\r\n    \"Production\",\r\n  ];\r\n  useEffect(() => {\r\n    if (!hasFetched.current) {\r\n      fetch(`http://omdbapi.com/?apikey=470179fa&i=${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setMovies(data);\r\n          if (data.Response === \"True\") {\r\n            setMovies(data.Search);\r\n            response.current = true;\r\n            setIsLoading(true);\r\n          } else {\r\n            response.current = false;\r\n            setIsLoading(true);\r\n          }\r\n        });\r\n      hasFetched.current = true;\r\n      setIsLoading(false);\r\n    }\r\n  }, [id, setMovies]);\r\n\r\n  return (\r\n    <>\r\n      <NavigBar />\r\n      <div className=\"col-md-10 mx-auto mt-5 mb-5\">\r\n        <div className=\"d-flex justify-content-left\">\r\n          {isLoading ? (\r\n            response === \"True\" ? (\r\n              <>\r\n                <div className=\"d-flex justify-content-left px-5\">\r\n                  <Image\r\n                    src={movies.Poster}\r\n                    width={300}\r\n                    height={450}\r\n                    className=\"img-no-hover\"\r\n                  />\r\n                </div>\r\n                <div className=\"inline-flex justify-content-left\">\r\n                  <div className=\"d-flex col-md-10 pl-5 ml-5\">\r\n                    <h1>{movies.Title}</h1>\r\n                  </div>\r\n                  <div className=\"d-flex col-md-10 pl-5 ml-5\">\r\n                    <p>{movies.Plot}</p>\r\n                  </div>\r\n                  <div className=\"d-flex col-md-10 pl-5 ml-5 justify-content-left\">\r\n                    <ul className=\"list-group justify-content-left\">\r\n                      {Object.keys(movies)\r\n                        .filter((value) => {\r\n                          return listedKeys.includes(value);\r\n                        })\r\n                        .map((key, index) => {\r\n                          return (\r\n                            <li\r\n                              className=\"list-group-item border-0 p-0\"\r\n                              key={key}\r\n                            >\r\n                              <p>\r\n                                <b>{`${key}:`}</b>\r\n                                {` ${movies[key]}`}\r\n                              </p>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Navigate to=\"/\" />\r\n            )\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"]},"metadata":{},"sourceType":"module"}