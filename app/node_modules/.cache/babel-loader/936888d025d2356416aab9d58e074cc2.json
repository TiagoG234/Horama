{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiago\\\\Desktop\\\\CenasJS\\\\cenas\\\\src\\\\components\\\\MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams, Navigate, Link } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Home from \"./Home\";\nimport { Image } from \"react-bootstrap\";\nimport rottenTomatoes from \"./images/Rotten_Tomatoes.svg.png\";\nimport imdbLogo from \"./images/imdb-logo.png\";\nimport metacriticLogo from \"./images/Metacritic.svg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const hasFetched = useRef(false);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const listedKeys = [\"Title\", \"Year\", \"Rated\", \"Released\", \"Runtime\", \"Genre\", \"Director\", \"Writer\", \"Actors\", \"Awards\", \"Box Office\", \"Production\"];\n  useEffect(() => {\n    if (!hasFetched.current) {\n      fetch(`http://omdbapi.com/?apikey=470179fa&i=${id}`).then(response => response.json()).then(data => {\n        setMovies(data);\n        setIsLoading(true);\n        document.title = `${data.Title} (${data.Year})`;\n      });\n      hasFetched.current = true;\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-10 mx-auto mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-left\",\n        children: isLoading ? movies.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-left px-5\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: movies.Poster,\n                width: 300,\n                height: 450,\n                className: \"img-no-hover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-flex col-lg-7 justify-content-left p-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex col-md-10 pl-5 ml-5\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: movies.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex col-md-10 pl-5 ml-5\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: movies.Plot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex col-md-10 pl-5 ml-5 justify-content-left\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-group justify-content-left\",\n                  children: Object.keys(movies).filter(value => {\n                    return listedKeys.includes(value);\n                  }).map((key, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-group-item border-0 p-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                          children: `${key}:`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 78,\n                          columnNumber: 35\n                        }, this), ` ${movies[key]}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 33\n                      }, this)\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pt-1 container inline-flex text-center mb-5 pb-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row justify-content-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-3\",\n                    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: movies.Ratings.filter(obj => obj.Source === \"Rotten Tomatoes\").length !== 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [`${movies.Ratings.filter(obj => obj.Source === \"Rotten Tomatoes\")[0].Value}`, /*#__PURE__*/_jsxDEV(Image, {\n                            src: rottenTomatoes,\n                            width: 100\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                          children: \"\\\"NA\\\"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 111,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Image, {\n                          src: rottenTomatoes,\n                          width: 100\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-3\",\n                    children: movies.imdbRating !== \"N/A\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                        children: `${movies.imdbRating}/10`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: `https://imdb.com/title/${movies.imdbID}`,\n                        children: /*#__PURE__*/_jsxDEV(Image, {\n                          src: imdbLogo,\n                          width: 100\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(Image, {\n                      src: imdbLogo,\n                      width: 100\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: movies.Metascore !== \"N/A\" ? `${movies.Metascore}/100` : \"N/A\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `https://metascore.com/movie/${movies.Title.replace(\" \", \"-\")}`,\n                      children: /*#__PURE__*/_jsxDEV(Image, {\n                        src: metacriticLogo,\n                        width: 100\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://www.imdb.com/title/${movies.imdbID}`,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: imdbLogo,\n                width: 100\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieDetail, \"vQvfS9rIkOdJYiiH+5vw3LsyUGA=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["C:/Users/Tiago/Desktop/CenasJS/cenas/src/components/MovieDetail.js"],"names":["React","useParams","Navigate","Link","useRef","useState","useEffect","Home","Image","rottenTomatoes","imdbLogo","metacriticLogo","MovieDetail","id","hasFetched","movies","setMovies","isLoading","setIsLoading","listedKeys","current","fetch","then","response","json","data","document","title","Title","Year","length","Poster","Plot","Object","keys","filter","value","includes","map","key","index","Ratings","obj","Source","Value","imdbRating","imdbID","Metascore","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useParams, Navigate, Link } from \"react-router-dom\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport Home from \"./Home\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport rottenTomatoes from \"./images/Rotten_Tomatoes.svg.png\";\r\nimport imdbLogo from \"./images/imdb-logo.png\";\r\nimport metacriticLogo from \"./images/Metacritic.svg.png\";\r\n\r\nconst MovieDetail = () => {\r\n  const { id } = useParams();\r\n  const hasFetched = useRef(false);\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const listedKeys = [\r\n    \"Title\",\r\n    \"Year\",\r\n    \"Rated\",\r\n    \"Released\",\r\n    \"Runtime\",\r\n    \"Genre\",\r\n    \"Director\",\r\n    \"Writer\",\r\n    \"Actors\",\r\n    \"Awards\",\r\n    \"Box Office\",\r\n    \"Production\",\r\n  ];\r\n  useEffect(() => {\r\n    if (!hasFetched.current) {\r\n      fetch(`http://omdbapi.com/?apikey=470179fa&i=${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setMovies(data);\r\n          setIsLoading(true);\r\n          document.title = `${data.Title} (${data.Year})`;\r\n        });\r\n      hasFetched.current = true;\r\n    }\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-md-10 mx-auto mt-5 mb-5\">\r\n        <div className=\"d-flex justify-content-left\">\r\n          {isLoading ? (\r\n            movies.length !== 0 ? (\r\n              <>\r\n                <>\r\n                  <div className=\"d-flex justify-content-left px-5\">\r\n                    <Image\r\n                      src={movies.Poster}\r\n                      width={300}\r\n                      height={450}\r\n                      className=\"img-no-hover\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"inline-flex col-lg-7 justify-content-left p-0\">\r\n                    <div className=\"d-flex col-md-10 pl-5 ml-5\">\r\n                      <h1>{movies.Title}</h1>\r\n                    </div>\r\n                    <div className=\"d-flex col-md-10 pl-5 ml-5\">\r\n                      <p>{movies.Plot}</p>\r\n                    </div>\r\n                    <div className=\"d-flex col-md-10 pl-5 ml-5 justify-content-left\">\r\n                      <ul className=\"list-group justify-content-left\">\r\n                        {Object.keys(movies)\r\n                          .filter((value) => {\r\n                            return listedKeys.includes(value);\r\n                          })\r\n                          .map((key, index) => {\r\n                            return (\r\n                              <li\r\n                                className=\"list-group-item border-0 p-0\"\r\n                                key={key}\r\n                              >\r\n                                <p>\r\n                                  <b>{`${key}:`}</b>\r\n                                  {` ${movies[key]}`}\r\n                                </p>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"pt-1 container inline-flex text-center mb-5 pb-5\">\r\n                      <div className=\"row justify-content-center\">\r\n                        <div className=\"col-sm-3\">\r\n                          <>\r\n                            {movies.Ratings.filter(\r\n                              (obj) => obj.Source === \"Rotten Tomatoes\"\r\n                            ).length !== 0 ? (\r\n                              <h1>\r\n                                {\r\n                                  <>\r\n                                    {`${\r\n                                      movies.Ratings.filter(\r\n                                        (obj) =>\r\n                                          obj.Source === \"Rotten Tomatoes\"\r\n                                      )[0].Value\r\n                                    }`}\r\n                                    <Image\r\n                                      src={rottenTomatoes}\r\n                                      width={100}\r\n                                    ></Image>\r\n                                  </>\r\n                                }\r\n                              </h1>\r\n                            ) : (\r\n                              <>\r\n                                <h1>\"NA\"</h1>\r\n                                <Image src={rottenTomatoes} width={100}></Image>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        </div>\r\n                        <div className=\"col-sm-3\">\r\n                          {movies.imdbRating !== \"N/A\" ? (\r\n                            <>\r\n                              <h1>{`${movies.imdbRating}/10`}</h1>\r\n                              <a\r\n                                href={`https://imdb.com/title/${movies.imdbID}`}\r\n                              >\r\n                                <Image src={imdbLogo} width={100}></Image>\r\n                              </a>\r\n                            </>\r\n                          ) : (\r\n                            <Image src={imdbLogo} width={100}></Image>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-sm-3\">\r\n                          <h1>\r\n                            {movies.Metascore !== \"N/A\"\r\n                              ? `${movies.Metascore}/100`\r\n                              : \"N/A\"}\r\n                          </h1>\r\n                          <a\r\n                            href={`https://metascore.com/movie/${movies.Title.replace(\r\n                              \" \",\r\n                              \"-\"\r\n                            )}`}\r\n                          >\r\n                            <Image src={metacriticLogo} width={100}></Image>\r\n                          </a>\r\n                        </div>\r\n                        <div className=\"col-sm-3\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n                <div className=\"logo\">\r\n                  <a href={`https://www.imdb.com/title/${movies.imdbID}`}>\r\n                    <Image src={imdbLogo} width={100}></Image>\r\n                  </a>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Navigate to=\"/\" />\r\n            )\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"]},"metadata":{},"sourceType":"module"}